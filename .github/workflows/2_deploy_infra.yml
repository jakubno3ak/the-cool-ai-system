name: Deploy Infrastructure

on:
  workflow_run:
    workflows: ["Build and Push to ECR"]
    types:
      - completed

jobs:
  ensure_ecr:
    name: Ensure ECR Exists
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Check if ECR exists
        id: check_ecr
        run: |
          ECR_REPO="${{ secrets.ECR_REPOSITORY }}"
          if aws ecr describe-repositories --repository-names "$ECR_REPO" >/dev/null 2>&1; then
            echo "ECR repository exists."
          else
            echo "Creating ECR repository..."
            aws ecr create-repository --repository-name "$ECR_REPO"
          fi

  deploy_infra:
    name: Deploy Terraform Infra
    needs: ensure_ecr
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Terraform Init & Apply
        run: |
          cd infra
          terraform init
          terraform apply -auto-approve

  update_ecs_service:
    name: Update ECS Service
    needs: deploy_infra
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Update ECS Service with Latest Image
        run: |
          aws ecs update-service --cluster the-cool-cluster \
            --service the-cool-service \
            --force-new-deployment
